
release/download.elf:     file format elf32-i386


Disassembly of section .init:

08048278 <_init>:
 8048278:	53                   	push   %ebx
 8048279:	83 ec 08             	sub    $0x8,%esp
 804827c:	e8 8f 00 00 00       	call   8048310 <__x86.get_pc_thunk.bx>
 8048281:	81 c3 7b 14 00 00    	add    $0x147b,%ebx
 8048287:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804828d:	85 c0                	test   %eax,%eax
 804828f:	74 05                	je     8048296 <_init+0x1e>
 8048291:	e8 2a 00 00 00       	call   80482c0 <__gmon_start__@plt>
 8048296:	83 c4 08             	add    $0x8,%esp
 8048299:	5b                   	pop    %ebx
 804829a:	c3                   	ret    

Disassembly of section .plt:

080482a0 <printf@plt-0x10>:
 80482a0:	ff 35 00 97 04 08    	pushl  0x8049700
 80482a6:	ff 25 04 97 04 08    	jmp    *0x8049704
 80482ac:	00 00                	add    %al,(%eax)
	...

080482b0 <printf@plt>:
 80482b0:	ff 25 08 97 04 08    	jmp    *0x8049708
 80482b6:	68 00 00 00 00       	push   $0x0
 80482bb:	e9 e0 ff ff ff       	jmp    80482a0 <_init+0x28>

080482c0 <__gmon_start__@plt>:
 80482c0:	ff 25 0c 97 04 08    	jmp    *0x804970c
 80482c6:	68 08 00 00 00       	push   $0x8
 80482cb:	e9 d0 ff ff ff       	jmp    80482a0 <_init+0x28>

080482d0 <__libc_start_main@plt>:
 80482d0:	ff 25 10 97 04 08    	jmp    *0x8049710
 80482d6:	68 10 00 00 00       	push   $0x10
 80482db:	e9 c0 ff ff ff       	jmp    80482a0 <_init+0x28>

Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    %ebp,%ebp
 80482e2:	5e                   	pop    %esi
 80482e3:	89 e1                	mov    %esp,%ecx
 80482e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482e8:	50                   	push   %eax
 80482e9:	54                   	push   %esp
 80482ea:	52                   	push   %edx
 80482eb:	68 a0 84 04 08       	push   $0x80484a0
 80482f0:	68 30 84 04 08       	push   $0x8048430
 80482f5:	51                   	push   %ecx
 80482f6:	56                   	push   %esi
 80482f7:	68 dc 83 04 08       	push   $0x80483dc
 80482fc:	e8 cf ff ff ff       	call   80482d0 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	66 90                	xchg   %ax,%ax
 8048304:	66 90                	xchg   %ax,%ax
 8048306:	66 90                	xchg   %ax,%ax
 8048308:	66 90                	xchg   %ax,%ax
 804830a:	66 90                	xchg   %ax,%ax
 804830c:	66 90                	xchg   %ax,%ax
 804830e:	66 90                	xchg   %ax,%ax

08048310 <__x86.get_pc_thunk.bx>:
 8048310:	8b 1c 24             	mov    (%esp),%ebx
 8048313:	c3                   	ret    
 8048314:	66 90                	xchg   %ax,%ax
 8048316:	66 90                	xchg   %ax,%ax
 8048318:	66 90                	xchg   %ax,%ax
 804831a:	66 90                	xchg   %ax,%ax
 804831c:	66 90                	xchg   %ax,%ax
 804831e:	66 90                	xchg   %ax,%ax

08048320 <deregister_tm_clones>:
 8048320:	b8 1f 97 04 08       	mov    $0x804971f,%eax
 8048325:	2d 1c 97 04 08       	sub    $0x804971c,%eax
 804832a:	83 f8 06             	cmp    $0x6,%eax
 804832d:	77 02                	ja     8048331 <deregister_tm_clones+0x11>
 804832f:	f3 c3                	repz ret 
 8048331:	b8 00 00 00 00       	mov    $0x0,%eax
 8048336:	85 c0                	test   %eax,%eax
 8048338:	74 f5                	je     804832f <deregister_tm_clones+0xf>
 804833a:	55                   	push   %ebp
 804833b:	89 e5                	mov    %esp,%ebp
 804833d:	83 ec 18             	sub    $0x18,%esp
 8048340:	c7 04 24 1c 97 04 08 	movl   $0x804971c,(%esp)
 8048347:	ff d0                	call   *%eax
 8048349:	c9                   	leave  
 804834a:	c3                   	ret    
 804834b:	90                   	nop
 804834c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048350 <register_tm_clones>:
 8048350:	b8 1c 97 04 08       	mov    $0x804971c,%eax
 8048355:	2d 1c 97 04 08       	sub    $0x804971c,%eax
 804835a:	c1 f8 02             	sar    $0x2,%eax
 804835d:	89 c2                	mov    %eax,%edx
 804835f:	c1 ea 1f             	shr    $0x1f,%edx
 8048362:	01 d0                	add    %edx,%eax
 8048364:	d1 f8                	sar    %eax
 8048366:	75 02                	jne    804836a <register_tm_clones+0x1a>
 8048368:	f3 c3                	repz ret 
 804836a:	ba 00 00 00 00       	mov    $0x0,%edx
 804836f:	85 d2                	test   %edx,%edx
 8048371:	74 f5                	je     8048368 <register_tm_clones+0x18>
 8048373:	55                   	push   %ebp
 8048374:	89 e5                	mov    %esp,%ebp
 8048376:	83 ec 18             	sub    $0x18,%esp
 8048379:	89 44 24 04          	mov    %eax,0x4(%esp)
 804837d:	c7 04 24 1c 97 04 08 	movl   $0x804971c,(%esp)
 8048384:	ff d2                	call   *%edx
 8048386:	c9                   	leave  
 8048387:	c3                   	ret    
 8048388:	90                   	nop
 8048389:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08048390 <__do_global_dtors_aux>:
 8048390:	80 3d 1c 97 04 08 00 	cmpb   $0x0,0x804971c
 8048397:	75 13                	jne    80483ac <__do_global_dtors_aux+0x1c>
 8048399:	55                   	push   %ebp
 804839a:	89 e5                	mov    %esp,%ebp
 804839c:	83 ec 08             	sub    $0x8,%esp
 804839f:	e8 7c ff ff ff       	call   8048320 <deregister_tm_clones>
 80483a4:	c6 05 1c 97 04 08 01 	movb   $0x1,0x804971c
 80483ab:	c9                   	leave  
 80483ac:	f3 c3                	repz ret 
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <frame_dummy>:
 80483b0:	a1 0c 96 04 08       	mov    0x804960c,%eax
 80483b5:	85 c0                	test   %eax,%eax
 80483b7:	74 1e                	je     80483d7 <frame_dummy+0x27>
 80483b9:	b8 00 00 00 00       	mov    $0x0,%eax
 80483be:	85 c0                	test   %eax,%eax
 80483c0:	74 15                	je     80483d7 <frame_dummy+0x27>
 80483c2:	55                   	push   %ebp
 80483c3:	89 e5                	mov    %esp,%ebp
 80483c5:	83 ec 18             	sub    $0x18,%esp
 80483c8:	c7 04 24 0c 96 04 08 	movl   $0x804960c,(%esp)
 80483cf:	ff d0                	call   *%eax
 80483d1:	c9                   	leave  
 80483d2:	e9 79 ff ff ff       	jmp    8048350 <register_tm_clones>
 80483d7:	e9 74 ff ff ff       	jmp    8048350 <register_tm_clones>

080483dc <main>:
#include "stdio.h"
#include "math.h"

int main()
{
 80483dc:	55                   	push   %ebp
 80483dd:	89 e5                	mov    %esp,%ebp
 80483df:	83 e4 f0             	and    $0xfffffff0,%esp
 80483e2:	83 ec 10             	sub    $0x10,%esp
	printf("Macro:\n"
 80483e5:	c7 44 24 0c c0 84 04 	movl   $0x80484c0,0xc(%esp)
 80483ec:	08 
 80483ed:	c7 44 24 08 d4 84 04 	movl   $0x80484d4,0x8(%esp)
 80483f4:	08 
 80483f5:	c7 44 24 04 d4 84 04 	movl   $0x80484d4,0x4(%esp)
 80483fc:	08 
 80483fd:	c7 04 24 d8 84 04 08 	movl   $0x80484d8,(%esp)
 8048404:	e8 a7 fe ff ff       	call   80482b0 <printf@plt>
		"\tPRJ_NAME      %s\n"
		"\tPRJ_VERSION   %s\n"
		"\tBUILD_DATE    %s\n",
		PRJ_NAME,PRJ_VERSION,BUILD_DATE);

	printf("sin(pi/2) = %f\n", sin(M_PI/2));
 8048409:	d9 e8                	fld1   
 804840b:	dd 5c 24 04          	fstpl  0x4(%esp)
 804840f:	c7 04 24 16 85 04 08 	movl   $0x8048516,(%esp)
 8048416:	e8 95 fe ff ff       	call   80482b0 <printf@plt>
	return 0;
 804841b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048420:	c9                   	leave  
 8048421:	c3                   	ret    
 8048422:	66 90                	xchg   %ax,%ax
 8048424:	66 90                	xchg   %ax,%ax
 8048426:	66 90                	xchg   %ax,%ax
 8048428:	66 90                	xchg   %ax,%ax
 804842a:	66 90                	xchg   %ax,%ax
 804842c:	66 90                	xchg   %ax,%ax
 804842e:	66 90                	xchg   %ax,%ax

08048430 <__libc_csu_init>:
 8048430:	55                   	push   %ebp
 8048431:	57                   	push   %edi
 8048432:	31 ff                	xor    %edi,%edi
 8048434:	56                   	push   %esi
 8048435:	53                   	push   %ebx
 8048436:	e8 d5 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 804843b:	81 c3 c1 12 00 00    	add    $0x12c1,%ebx
 8048441:	83 ec 1c             	sub    $0x1c,%esp
 8048444:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048448:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804844e:	e8 25 fe ff ff       	call   8048278 <_init>
 8048453:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048459:	29 c6                	sub    %eax,%esi
 804845b:	c1 fe 02             	sar    $0x2,%esi
 804845e:	85 f6                	test   %esi,%esi
 8048460:	74 27                	je     8048489 <__libc_csu_init+0x59>
 8048462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048468:	8b 44 24 38          	mov    0x38(%esp),%eax
 804846c:	89 2c 24             	mov    %ebp,(%esp)
 804846f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048473:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048477:	89 44 24 04          	mov    %eax,0x4(%esp)
 804847b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048482:	83 c7 01             	add    $0x1,%edi
 8048485:	39 f7                	cmp    %esi,%edi
 8048487:	75 df                	jne    8048468 <__libc_csu_init+0x38>
 8048489:	83 c4 1c             	add    $0x1c,%esp
 804848c:	5b                   	pop    %ebx
 804848d:	5e                   	pop    %esi
 804848e:	5f                   	pop    %edi
 804848f:	5d                   	pop    %ebp
 8048490:	c3                   	ret    
 8048491:	eb 0d                	jmp    80484a0 <__libc_csu_fini>
 8048493:	90                   	nop
 8048494:	90                   	nop
 8048495:	90                   	nop
 8048496:	90                   	nop
 8048497:	90                   	nop
 8048498:	90                   	nop
 8048499:	90                   	nop
 804849a:	90                   	nop
 804849b:	90                   	nop
 804849c:	90                   	nop
 804849d:	90                   	nop
 804849e:	90                   	nop
 804849f:	90                   	nop

080484a0 <__libc_csu_fini>:
 80484a0:	f3 c3                	repz ret 
 80484a2:	66 90                	xchg   %ax,%ax

Disassembly of section .fini:

080484a4 <_fini>:
 80484a4:	53                   	push   %ebx
 80484a5:	83 ec 08             	sub    $0x8,%esp
 80484a8:	e8 63 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 80484ad:	81 c3 4f 12 00 00    	add    $0x124f,%ebx
 80484b3:	83 c4 08             	add    $0x8,%esp
 80484b6:	5b                   	pop    %ebx
 80484b7:	c3                   	ret    
